{
    "swagger": "2.0",
    "info": {
        "contact": {}
    },
    "paths": {
        "/achievements": {
            "get": {
                "description": "Returns current records across all finished, non-partial games, including all holders for each record.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "achievements"
                ],
                "summary": "Global achievements (records)",
                "responses": {
                    "200": {
                        "description": "value, Count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/agendas/classified-document-leaks": {
            "post": {
                "description": "Selects a scored secret objective to become public; the scorer keeps the point but loses a secret slot.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agendas"
                ],
                "summary": "Apply \"Classified Document Leaks\"",
                "parameters": [
                    {
                        "description": "Game ID, player, and target secret objective",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.ClassifiedDocumentLeaksRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/agendas/incentive-program": {
            "post": {
                "description": "Grants 1 point to all players who voted with the outcome (for or against).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agendas"
                ],
                "summary": "Apply \"Incentive Program\"",
                "parameters": [
                    {
                        "description": "Game ID and outcome",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.IncentiveProgramRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/agendas/mutiny": {
            "post": {
                "description": "Awards 1 point to players who voted \"for\" and finalizes the result.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agendas"
                ],
                "summary": "Apply \"Mutiny\" agenda",
                "parameters": [
                    {
                        "description": "Game and resolution context (if applicable)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AgendaResolution"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/agendas/political-censure": {
            "post": {
                "description": "Bans the elected player from voting on the next agenda.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agendas"
                ],
                "summary": "Apply \"Political Censure\" agenda",
                "parameters": [
                    {
                        "description": "Game ID and elected player",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.PoliticalCensureRequest"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/agendas/seed-of-empire": {
            "post": {
                "description": "Grants a VP to the elected player and creates a public 1-point objective for them.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "agendas"
                ],
                "summary": "Apply \"Seed of an Empire\" agenda",
                "parameters": [
                    {
                        "description": "Game ID and elected player",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.SeedOfEmpireResolution"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/factions": {
            "get": {
                "description": "Returns all available factions.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "factions"
                ],
                "summary": "List factions",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games": {
            "get": {
                "description": "Returns all games with players and winner info.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "List games",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Search query (e.g., 'winner:Alice', 'player:Bob')",
                        "name": "search",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/models.Game"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "description": "Creates a new game with players; can optionally generate objectives.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Create a new game",
                "parameters": [
                    {
                        "description": "New game payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateGameInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "game, revealed",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/assign-objective": {
            "post": {
                "description": "Admin action to attach an objective to a specific game round.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Manually assign a public objective to a round",
                "parameters": [
                    {
                        "description": "Assignment payload",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AssignObjectiveRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/assign-player": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players",
                    "games"
                ],
                "summary": "Assign player to game",
                "parameters": [
                    {
                        "description": "Game ID, Player ID, Faction",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.AssignPlayerInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "game_player",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{game_id}/advance-round": {
            "post": {
                "description": "Advances the round; reveals a public objective unless none remain (then ends the game).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Advance game round",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{game_id}/players/{player_id}/sftt": {
            "post": {
                "description": "Give or revoke Support for the Throne for a player in a game.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "summary": "Support for the Throne",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "player_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "round_id, action (give|revoke)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{game_id}/score": {
            "post": {
                "description": "Marks a player as having scored a specific objective in a game.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "summary": "Score an objective",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "game_id, player_id, objective_id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "403": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{game_id}/speaker": {
            "post": {
                "description": "Assigns a speaker (initial or current) for a specific round.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Assign speaker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "game_id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "player_id, round_id, is_initial",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}": {
            "get": {
                "description": "Returns detailed game state with objective-based scoring breakdown.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get game detail",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "delete": {
                "description": "Permanently deletes a game by its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Delete a game",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "status and deleted game ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}/achievements": {
            "get": {
                "description": "Computes and returns per-game achievements (only for finished, non-partial games).",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get achievements for a game",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "value, Count",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}/exists": {
            "get": {
                "description": "Returns {\"exists\": true|false}.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Check game exists",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "boolean"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}/objectives": {
            "get": {
                "description": "Returns all public objectives for a game, including stage and round.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Get game public objectives",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}/players": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "List players in a game",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}/scores/objectives/summary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring",
                    "games"
                ],
                "summary": "Objective score summary for a game",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/games/{id}/speaker/randomise": {
            "post": {
                "description": "Randomly selects a speaker for the game.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "games"
                ],
                "summary": "Randomise speaker",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Game ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "speaker_id, speaker_name",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/objectives/public": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objectives"
                ],
                "summary": "List public objectives",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/objectives/secret": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objectives"
                ],
                "summary": "List secret objectives",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/players": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "List players",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "object",
                                "additionalProperties": true
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            },
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Create player",
                "parameters": [
                    {
                        "description": "Player (name required)",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.Player"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}/games": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "players"
                ],
                "summary": "Get a player's games",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "player, games",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}/scores/by-round": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring",
                    "players"
                ],
                "summary": "Player scores by round",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/players/{id}/scores/summary": {
            "get": {
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring",
                    "players"
                ],
                "summary": "Player score summary",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Player ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/relic/crown": {
            "post": {
                "description": "Grants 1 point to the specified player (one-time effect).",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relics"
                ],
                "summary": "Apply \"Crown of Emphidia\"",
                "parameters": [
                    {
                        "description": "Game ID and player ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RelicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/relic/latvina": {
            "post": {
                "description": "Grants a player a point for planets with 4 tech specialties.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relics"
                ],
                "summary": "Apply \"Book Of Latvina\"",
                "parameters": [
                    {
                        "description": "Game ID and player ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RelicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/relic/obsidian": {
            "post": {
                "description": "Allows a player to score one additional secret objective this game.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relics"
                ],
                "summary": "Apply \"The Obsidian\"",
                "parameters": [
                    {
                        "description": "Game ID and player ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.RelicRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/relic/shard": {
            "post": {
                "description": "Transfers Shard; grants a point to new holder and removes from previous holder if applicable.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "relics"
                ],
                "summary": "Update \"Shard of the Throne\" holder",
                "parameters": [
                    {
                        "description": "Game ID and new holder ID",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/controllers.ShardRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/score": {
            "delete": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "summary": "Delete a scored objective",
                "parameters": [
                    {
                        "description": "game_id, player_id, objective_id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/score/imperial": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "summary": "Score Imperial point",
                "parameters": [
                    {
                        "description": "game_id, player_id, round_id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/score/imperial-rider": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "summary": "Score Imperial Rider point",
                "parameters": [
                    {
                        "description": "game_id, round_id, player_id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/score/mecatol": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "scoring"
                ],
                "summary": "Score Custodians (Mecatol) point",
                "parameters": [
                    {
                        "description": "game_id, player_id, round_id",
                        "name": "body",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "type": "object"
                        }
                    }
                ],
                "responses": {
                    "204": {
                        "description": "No Content"
                    },
                    "400": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "409": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/stats/objectives/difficulty": {
            "get": {
                "description": "Calculates and returns difficulty metrics for TI4 objectives.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "objectives",
                    "stats"
                ],
                "summary": "Get objective difficulty",
                "parameters": [
                    {
                        "type": "string",
                        "default": "all",
                        "description": "Filter by stage (I, II, secret, or all)",
                        "name": "stage",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 5,
                        "description": "Minimum appearances required to include",
                        "name": "minAppearances",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 0,
                        "description": "Minimum scoring opportunities required",
                        "name": "minOpportunities",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.ObjectiveDifficultyResponse"
                        }
                    },
                    "500": {
                        "description": "Internal server error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/stats/overview": {
            "get": {
                "description": "Returns headline stats plus Custodians (Mecatol) stats per player.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "stats"
                ],
                "summary": "Stats overview",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "controllers.RelicRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "player_id": {
                    "type": "integer"
                }
            }
        },
        "controllers.ShardRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "new_holder_id": {
                    "type": "integer"
                }
            }
        },
        "models.AgendaResolution": {
            "type": "object",
            "properties": {
                "for_votes": {
                    "type": "array",
                    "items": {
                        "type": "integer"
                    }
                },
                "game_id": {
                    "type": "integer"
                },
                "result": {
                    "type": "string"
                },
                "round_id": {
                    "type": "integer"
                }
            }
        },
        "models.AssignObjectiveRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "objective_id": {
                    "type": "integer"
                },
                "round_id": {
                    "type": "integer"
                }
            }
        },
        "models.AssignPlayerInput": {
            "type": "object",
            "properties": {
                "faction": {
                    "type": "string"
                },
                "game_id": {
                    "type": "integer"
                },
                "player_id": {
                    "type": "integer"
                }
            }
        },
        "models.ClassifiedDocumentLeaksRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "objective_id": {
                    "type": "integer"
                },
                "player_id": {
                    "type": "integer"
                },
                "round_id": {
                    "type": "integer"
                }
            }
        },
        "models.CreateGameInput": {
            "type": "object",
            "properties": {
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PlayerInput"
                    }
                },
                "speaker_id": {
                    "type": "integer"
                },
                "use_objective_decks": {
                    "type": "boolean"
                },
                "use_random_speaker": {
                    "type": "boolean"
                },
                "winning_points": {
                    "type": "integer"
                }
            }
        },
        "models.Game": {
            "type": "object",
            "properties": {
                "created_at": {
                    "type": "string"
                },
                "current_round": {
                    "type": "integer"
                },
                "finished_at": {
                    "type": "string"
                },
                "game_number": {
                    "type": "integer"
                },
                "game_objectives": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GameObjective"
                    }
                },
                "id": {
                    "type": "integer"
                },
                "partial": {
                    "type": "boolean"
                },
                "players": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.GamePlayer"
                    }
                },
                "rounds": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Round"
                    }
                },
                "speaker": {
                    "$ref": "#/definitions/models.Player"
                },
                "speakerAssignments": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.SpeakerAssignment"
                    }
                },
                "speaker_id": {
                    "type": "integer"
                },
                "startingSpeakerID": {
                    "type": "integer"
                },
                "use_objective_decks": {
                    "type": "boolean"
                },
                "winner": {
                    "$ref": "#/definitions/models.Player"
                },
                "winner_id": {
                    "type": "integer"
                },
                "winning_points": {
                    "type": "integer"
                }
            }
        },
        "models.GameObjective": {
            "type": "object",
            "properties": {
                "GameID": {
                    "type": "integer"
                },
                "ID": {
                    "type": "integer"
                },
                "IsCDL": {
                    "type": "boolean"
                },
                "Objective": {
                    "$ref": "#/definitions/models.Objective"
                },
                "ObjectiveID": {
                    "type": "integer"
                },
                "Round": {
                    "$ref": "#/definitions/models.Round"
                },
                "RoundID": {
                    "type": "integer"
                },
                "Stage": {
                    "type": "string"
                },
                "position": {
                    "type": "integer"
                },
                "revealed": {
                    "type": "boolean"
                }
            }
        },
        "models.GamePlayer": {
            "type": "object",
            "properties": {
                "faction": {
                    "type": "string"
                },
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "player": {
                    "$ref": "#/definitions/models.Player"
                },
                "playerID": {
                    "type": "integer"
                },
                "won": {
                    "type": "boolean"
                }
            }
        },
        "models.IncentiveProgramRequest": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "outcome": {
                    "type": "string"
                }
            }
        },
        "models.Objective": {
            "type": "object",
            "properties": {
                "description": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                },
                "phase": {
                    "type": "string"
                },
                "points": {
                    "type": "integer"
                },
                "stage": {
                    "type": "string"
                },
                "type": {
                    "type": "string"
                }
            }
        },
        "models.ObjectiveDifficultyResponse": {
            "type": "object",
            "properties": {
                "filters": {
                    "description": "Echoed filters used to compute the response.\nExample: {\"stage\":\"I\",\"minAppearances\":\"5\",\"minOpportunities\":\"0\"}",
                    "type": "object",
                    "additionalProperties": {
                        "type": "string"
                    },
                    "example": {
                        "\"minAppearances\"": "\"5\"",
                        "\"minOpportunities\"": "\"0\"}",
                        "{\"stage\"": "\"I\""
                    }
                },
                "generated_at": {
                    "description": "Timestamp when these stats were generated.",
                    "type": "string",
                    "format": "date-time",
                    "example": "2025-08-17T14:32:10Z"
                },
                "rows": {
                    "description": "Rows of per-objective difficulty metrics, sorted by difficulty desc then adj_rate asc.",
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.ObjectiveDifficultyRow"
                    }
                }
            }
        },
        "models.ObjectiveDifficultyRow": {
            "type": "object",
            "properties": {
                "adj_rate": {
                    "description": "Bayesian-adjusted scoring rate (alpha=2, beta=5).",
                    "type": "number",
                    "example": 0.5714
                },
                "appearances": {
                    "description": "Number of distinct games in which this objective appeared (was revealed).",
                    "type": "integer",
                    "example": 18
                },
                "avg_round": {
                    "description": "Average round number when this objective was first scored in a game.",
                    "type": "number",
                    "example": 2.3
                },
                "difficulty": {
                    "description": "Difficulty as 1 - RawRate (higher is harder).",
                    "type": "number",
                    "example": 0.4222
                },
                "median_round": {
                    "description": "Median round number when this objective was first scored in a game.",
                    "type": "number",
                    "example": 2
                },
                "name": {
                    "description": "Objective name as stored in the objectives table.",
                    "type": "string",
                    "example": "Expand Borders"
                },
                "objective_id": {
                    "description": "Database ID of the objective.",
                    "type": "integer",
                    "example": 12
                },
                "opportunities": {
                    "description": "Total number of player-opportunities to score this objective\n(sum of players in games where the objective appeared).",
                    "type": "integer",
                    "example": 90
                },
                "phase": {
                    "description": "Phase in which the objective is scored (e.g., \"Status\").",
                    "type": "string",
                    "example": "Status"
                },
                "raw_rate": {
                    "description": "Raw scoring rate S/O.",
                    "type": "number",
                    "example": 0.5778
                },
                "scores": {
                    "description": "Total number of times players actually scored this objective.",
                    "type": "integer",
                    "example": 52
                },
                "stage": {
                    "description": "Objective stage.\nAllowed values depend on your dataset; commonly \"I\", \"II\" (public objectives).",
                    "type": "string",
                    "enum": [
                        "I",
                        "II"
                    ],
                    "example": "I"
                },
                "wilson_hi": {
                    "description": "Wilson score interval (upper bound, 95% CI).",
                    "type": "number",
                    "example": 0.68
                },
                "wilson_lo": {
                    "description": "Wilson score interval (lower bound, 95% CI).",
                    "type": "number",
                    "example": 0.47
                }
            }
        },
        "models.Player": {
            "type": "object",
            "properties": {
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.PlayerInput": {
            "type": "object",
            "properties": {
                "faction": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "models.PoliticalCensureRequest": {
            "type": "object",
            "properties": {
                "gained": {
                    "type": "boolean"
                },
                "game_id": {
                    "type": "integer"
                },
                "player_id": {
                    "type": "integer"
                },
                "round_id": {
                    "type": "integer"
                }
            }
        },
        "models.Round": {
            "type": "object",
            "properties": {
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "number": {
                    "type": "integer"
                },
                "scores": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Score"
                    }
                }
            }
        },
        "models.Score": {
            "type": "object",
            "properties": {
                "agendaTitle": {
                    "type": "string"
                },
                "created_at": {
                    "type": "string"
                },
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "objective": {
                    "$ref": "#/definitions/models.Objective"
                },
                "objectiveID": {
                    "type": "integer"
                },
                "originallySecret": {
                    "type": "boolean"
                },
                "player": {
                    "$ref": "#/definitions/models.Player"
                },
                "playerID": {
                    "type": "integer"
                },
                "points": {
                    "type": "integer"
                },
                "relicTitle": {
                    "type": "string"
                },
                "round": {
                    "$ref": "#/definitions/models.Round"
                },
                "roundID": {
                    "type": "integer"
                },
                "type": {
                    "description": "e.g. objective, imperial, support",
                    "type": "string"
                }
            }
        },
        "models.SeedOfEmpireResolution": {
            "type": "object",
            "properties": {
                "game_id": {
                    "type": "integer"
                },
                "result": {
                    "description": "\"for\" or \"against\"",
                    "type": "string"
                },
                "round_id": {
                    "type": "integer"
                }
            }
        },
        "models.SpeakerAssignment": {
            "type": "object",
            "properties": {
                "game": {
                    "$ref": "#/definitions/models.Game"
                },
                "gameID": {
                    "type": "integer"
                },
                "id": {
                    "type": "integer"
                },
                "player": {
                    "$ref": "#/definitions/models.Player"
                },
                "playerID": {
                    "type": "integer"
                },
                "round": {
                    "$ref": "#/definitions/models.Round"
                },
                "roundID": {
                    "type": "integer"
                }
            }
        }
    }
}